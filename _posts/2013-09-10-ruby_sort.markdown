---
layout: post
title: Rubyで数字が含まれたファイル名をソートする
date: 2013-09-10 11:00:00
description:
---
ファイルに数字が含まれたファイル名を昇順にソートするケースがあったので、エレガントにする方法を探してみた。 ターゲットになるファイル名は「page10.html, page02.html, page06.html...」というように文字列のちょうど真ん中に数字が含まれており、 不規則な順番でならんでいるとする。 これらを次のように昇順にしたい。「page01.html, page02.html, page03.html...」

#### 初期値として以下のような配列を用意しておく

<pre class="prettyprint">arr = ['page010.html', 'page02.html', 'page06.html', 'page01.html', 'page03.html', 'page09.html', 'page04.html', 'page07.html', 'page08.html', 'page05.html']
</pre>

#### (1).普通にソート

なにも考えずにsort関数に渡してみると、文字列とみなされるので辞書順ソートになってしまい、うまくいかない

<pre class="prettyprint">arr.sort

# => ["page01.html", "page010.html", "page02.html", "page03.html", "page04.html", "page05.html", "page06.html", "page07.html", "page08.html", "page09.html"]
</pre>

#### (2).正規表現で数字をマッチさせてソート

次に考えたのが、page**xx**.htmlの部分だけを正規表現で抜き出して、数値比較でソートさせるやり方。計算量の少ないsort_byを使う

<pre class="prettyprint">arr.sort_by do
  |k| /([\d]+)/ =~ k
  $1.to_i
end

# => ["page01.html", "page02.html", "page03.html", "page04.html", "page05.html", "page06.html", "page07.html", "page08.html", "page09.html", "page010.html"]
</pre>

ソート成功だが、なんか野暮ったい。いけてないので、ワンライナーにしたい  

#### (3).正規表現で数字をマッチさせてワンライナーでソート

<pre class="prettyprint">arr.sort_by {|k| k[/\d+/].to_i}
</pre>

文字列の配列アクセス＋正規表現でミニマムなコード量で数値だけを抽出できた。ワンライナーできれいにかけた。  

#### (4).ちなみにHaxeで書くと

<pre class="prettyprint">arr.sort(function(a, b) {
  var r = ~/(\d+)/, rr = ~/(\d+)/;
  r.match(a);rr.match(b);
  return r.matched(1).parseInt() - rr.matched(1).parseInt();
});
</pre>

うーむまぁ、、、こんなもんでしょ。Rubyが便利すぎ
